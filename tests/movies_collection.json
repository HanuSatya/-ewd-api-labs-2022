{
	"info": {
		"_postman_id": "c0af1d30-587e-49e9-aae7-4bdc5ba634b0",
		"name": "Movies API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20985787"
	},
	"item": [
		{
			"name": "Create Account",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"firstName\", pm.variables.replaceIn('{{$randomFirstName}}'))\r",
							"pm.collectionVariables.set(\"lastName\",pm.variables.replaceIn('{{$randomLastName}}'))\r",
							"pm.collectionVariables.set(\"email\", pm.variables.replaceIn('{{$randomEmail}}'))\r",
							"pm.collectionVariables.set(\"password\",\"test123@\")"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"  pm.test(\"Add Account: Successful Response\",()=>pm.response.to.have.status(201))\r",
							"\r",
							"    //... other tests\r",
							"  const jsonData = pm.response.json();\r",
							"  pm.test(\"Add Account: Response Object contains correct properties\",()=>{\r",
							"    pm.expect(jsonData).to.have.property(\"id\");\r",
							"    pm.expect(jsonData.id).to.be.a(\"string\");\r",
							"    pm.expect(jsonData.firstName).to.eql(pm.collectionVariables.get(\"firstName\"));\r",
							"    pm.expect(jsonData.lastName).to.eql(pm.collectionVariables.get(\"lastName\"));\r",
							"    pm.expect(jsonData.email).to.eql(pm.collectionVariables.get(\"email\"));\r",
							"  })"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"email\":\"{{email}}\",\r\n    \"password\":\"{{password}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/accounts",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"accounts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Security Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"  const jsonData = pm.response.json();\r",
							"\r",
							"  pm.test(\"Get Token: Successful Response\",()=>pm.response.to.have.status(200))\r",
							"\r",
							"  pm.test(\"Get Token: Response Object contains token\",()=>{\r",
							"    pm.expect(jsonData).to.have.property(\"token\");\r",
							"    pm.expect(jsonData.token).to.be.a(\"string\");\r",
							"  })\r",
							"  pm.test(\"Get Token: Response contains correctly formatted token\",()=>{\r",
							"    const splitArray = jsonData.token.split(\" \")\r",
							"    pm.expect(splitArray[0].toLowerCase()).to.eql(\"bearer\");\r",
							"    pm.expect(splitArray[1]).length.to.be.greaterThan(25);\r",
							"    pm.collectionVariables.set(\"authToken\",splitArray[1])\r",
							"  })"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\":\"{{email}}\",\r\n    \"password\":\"{{password}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/accounts/security/token",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"accounts",
						"security",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "Valid Token Request upcoming",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get upcoming Movies: Status code is 200\",  ()=> {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Get upcoming Movies: Content-Type is correct\", function () {\r",
							"   pm.expect(pm.response.headers.get('Content-Type')).to.contain('application/json');\r",
							"});\r",
							"\r",
							"pm.test(\"Get upcoming Movies: Response time is less than 400ms\", () => {\r",
							"  pm.expect(pm.response.responseTime).to.be.below(400);\r",
							"});\r",
							"\r",
							"const jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Get upcoming Movies: Test movie data of response\", () => {\r",
							"  pm.expect(jsonData).to.be.an(\"object\");\r",
							"  pm.expect(jsonData.page).to.be.a(\"number\");\r",
							"  pm.expect(jsonData.results).to.be.an(\"array\").length.lessThan(21);\r",
							"  aMovie=jsonData.results[0]\r",
							"  pm.expect(aMovie).to.have.property(\"id\");\r",
							"  pm.expect(aMovie).to.have.property(\"title\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{authToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/api/movies/upcoming?page=1",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"movies",
						"upcoming"
					],
					"query": [
						{
							"key": "page",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Invalid Token Request upcoming Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Add Account: Successful Response\",()=>pm.response.to.have.status(500))\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "A bad token",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/api/movies/upcoming?page=1",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"movies",
						"upcoming"
					],
					"query": [
						{
							"key": "page",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Fantasy Movie",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"firstName\", pm.variables.replaceIn('{{$randomFirstName}}'))\r",
							"pm.collectionVariables.set(\"lastName\",pm.variables.replaceIn('{{$randomLastName}}'))\r",
							"pm.collectionVariables.set(\"email\", pm.variables.replaceIn('{{$randomEmail}}'))\r",
							"pm.collectionVariables.set(\"password\",\"test123@\")"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"  pm.test(\"Add Fantasy Movie: Successful Response\",()=>pm.response.to.have.status(201))\r",
							"\r",
							"    //... other tests\r",
							"  const jsonData = pm.response.json();\r",
							"  pm.test(\"Add FantasyMovie: Response Object contains correct properties\",()=>{\r",
							"    pm.expect(jsonData).to.have.property(\"id\");\r",
							"    pm.expect(jsonData.id).to.be.a(\"string\");\r",
							"    pm.collectionVariables.set(\"fantasymovieid\",jsonData.id);\r",
							"    pm.expect(jsonData.title).to.eql(pm.collectionVariables.get(\"title\"));\r",
							"    pm.expect(jsonData.overview).to.eql(pm.collectionVariables.get(\"overview\"));\r",
							"    pm.expect(jsonData.runtime).to.eql(pm.collectionVariables.get(\"runtime\"));\r",
							"     pm.expect(jsonData.release_date).to.eql(pm.collectionVariables.get(\"release_date\"));\r",
							"       })"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\":\"{{title}}\",\r\n    \"overview\":\"{{overview}}\",\r\n    \"genres\":[{{genre1}},{{genre2}}],\r\n    \"runtime\":\"{{runtime}}\",\r\n    \"release_date\":\"{{release_date}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/movies/fantasymovie",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"movies",
						"fantasymovie"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Fantasy Movie",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"firstName\", pm.variables.replaceIn('{{$randomFirstName}}'))\r",
							"pm.collectionVariables.set(\"lastName\",pm.variables.replaceIn('{{$randomLastName}}'))\r",
							"pm.collectionVariables.set(\"email\", pm.variables.replaceIn('{{$randomEmail}}'))\r",
							"pm.collectionVariables.set(\"password\",\"test123@\")"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							" pm.test(\"Get Fantasy Movie: Successful Response\",()=>pm.response.to.have.status(200))\r",
							" pm.test(\"Get Fantasy Movie: Content-Type is correct\", function () {\r",
							"   pm.expect(pm.response.headers.get('Content-Type')).to.contain('application/json');\r",
							"});\r",
							"\r",
							"pm.test(\"Get Fantasy Movie: Response time is less than 400ms\", () => {\r",
							"  pm.expect(pm.response.responseTime).to.be.below(400);\r",
							"});\r",
							"\r",
							"const jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Get Fantasy Movie: Test fantasy movie data of response\", () => {\r",
							"  pm.expect(jsonData).to.be.an(\"object\");\r",
							"  pm.expect(jsonData.id).to.be.a(\"string\");\r",
							"  pm.expect(jsonData.title).to.be.a(\"string\");\r",
							"  pm.expect(jsonData.runtime).to.be.a(\"number\");\r",
							"  pm.expect(jsonData.overview).to.be.a(\"string\");\r",
							"  pm.expect(jsonData.release_date).to.be.a(\"string\");\r",
							"  pm.expect(jsonData.genres).to.be.an(\"array\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/movies/fantasymovie/{{fantasymovieid}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"movies",
						"fantasymovie",
						"{{fantasymovieid}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "firstName",
			"value": "John",
			"type": "string"
		},
		{
			"key": "lastName",
			"value": "Doe",
			"type": "string"
		},
		{
			"key": "email",
			"value": "john@doe.ie",
			"type": "string"
		},
		{
			"key": "password",
			"value": "test123@",
			"type": "string"
		},
		{
			"key": "authToken",
			"value": ""
		},
		{
			"key": "title",
			"value": "Sample Title",
			"type": "string"
		},
		{
			"key": "overview",
			"value": "Sample overview",
			"type": "string"
		},
		{
			"key": "runtime",
			"value": "2",
			"type": "string"
		},
		{
			"key": "release_date",
			"value": "03/25/2015",
			"type": "string"
		},
		{
			"key": "genre1",
			"value": "12",
			"type": "string"
		},
		{
			"key": "genre2",
			"value": "13",
			"type": "string"
		},
		{
			"key": "fantasymovieid",
			"value": "",
			"type": "string"
		}
	]
}